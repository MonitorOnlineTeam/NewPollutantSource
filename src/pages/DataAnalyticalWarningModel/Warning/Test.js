import React, { useState, useEffect, useRef } from 'react';
import { connect } from 'dva';
import { Card, Button } from 'antd';
import BreadcrumbWrapper from '@/components/BreadcrumbWrapper';
import ReactEcharts from 'echarts-for-react';

const dvaPropsData = ({ loading, wordSupervision }) => ({
  // todoList: wordSupervision.todoList,
  // todoListLoading: loading.effects['wordSupervision/GetToDoDailyWorks'],
});

const Index = props => {
  const echartsRefs = useRef([]);
  const { dispatch } = props;
  const [dataSource, setDataSource] = useState([]);

  useEffect(() => {}, []);

  //
  const getOption = () => {
    return {
      xAxis: {
        type: 'category',
        splitLine: {
          show: true,
        },
        data: [
          '2023-03-22 00',
          '2023-03-22 01',
          '2023-03-22 02',
          '2023-03-22 03',
          '2023-03-22 04',
          '2023-03-22 05',
          '2023-03-22 06',
          '2023-03-22 07',
          '2023-03-22 08',
          '2023-03-22 09',
          '2023-03-22 10',
          '2023-03-22 11',
          '2023-03-22 12',
          '2023-03-22 13',
          '2023-03-22 14',
          '2023-03-22 15',
          '2023-03-22 16',
          '2023-03-22 17',
          '2023-03-22 18',
          '2023-03-22 19',
          '2023-03-22 20',
          '2023-03-22 21',
          '2023-03-22 22',
          '2023-03-22 23',
          '2023-03-23 00',
          '2023-03-23 01',
          '2023-03-23 02',
          '2023-03-23 03',
          '2023-03-23 04',
          '2023-03-23 05',
          '2023-03-23 06',
          '2023-03-23 07',
          '2023-03-23 08',
          '2023-03-23 09',
          '2023-03-23 10',
          '2023-03-23 11',
          '2023-03-23 12',
          '2023-03-23 13',
          '2023-03-23 14',
          '2023-03-23 15',
          '2023-03-23 16',
          '2023-03-23 17',
          '2023-03-23 18',
          '2023-03-23 19',
          '2023-03-23 20',
          '2023-03-23 21',
          '2023-03-23 22',
          '2023-03-23 23',
          '2023-03-24 00',
        ],
      },
      yAxis: {
        type: 'value',
        splitLine: {
          show: true,
        },
        max: 30,
      },
      title: [
        {
          left: 'center',
          text: '氧含量',
        },
      ],
      series: [
        {
          name: 'O2',
          data: [
            24.206,
            18.092,
            22.574,
            20.816,
            19.864,
            17.744,
            19.516,
            19.435,
            20.949,
            16.801,
            20.388,
            23.988,
            20.875,
            21.654,
            20.583,
            19.38,
            20.628,
            24.046,
            25.285,
            16.816,
            17.171,
            21.405,
            22.541,
            20.479,
            17.301,
            12.776,
            21.873,
            19.897,
            19.89,
            15.7549,
            12.7519,
            11.347,
            12.6322,
            17.3397,
            13.891499999999999,
            13.470799999999999,
            15.6093,
            16.1294,
            15.579199999999998,
            13.2615,
            14.6391,
            14.4865,
            16.2477,
            15.0542,
            14.5047,
            12.8079,
            12.4502,
            8.0171,
            10.467099999999999,
          ],
          type: 'line',
          markLine: {
            data: [
              [
                {
                  name: 'cellName',
                  // lineStyle: { color: '#ff0000' },
                  coord: ['2023-03-22 10', 0],
                  symbol: 'none',
                  symbolSize: 0,
                },
                {
                  coord: ['2023-03-22 10', 30],
                  symbol: 'arrow',
                  symbolSize: 1,
                },
              ],
              [
                {
                  name: '波动上限',
                  lineStyle: { color: '#ff0000' },
                  // [坐标轴]
                  coord: [0, 25],
                },
                {
                  coord: [28, 25],
                },
              ],
              [
                {
                  name: '波动下限',
                  lineStyle: { color: '#ff0000' },
                  coord: [0, 15],
                },
                {
                  coord: [28, 15],
                },
              ],
              [
                {
                  name: '波动上限1',
                  lineStyle: { color: '#ff00ff' },
                  coord: [29, 16],
                },
                {
                  coord: [48, 16],
                },
              ],
              [
                {
                  name: '波动下限1',
                  lineStyle: { color: '#ff00ff' },
                  coord: [29, 10],
                },
                {
                  coord: [48, 10],
                },
              ],
            ],
          },
        },
      ],
    };
  };

  const onDownLoad = () => {
    for (let index = 0; index < 2; index++) {
      // let echart = eval('echartsRef' + index);
      let imgSrc = echartsRefs.current[index].getEchartsInstance().getDataURL({
        pixelRatio: 2,
        backgroundColor: '#fff',
      });

      let a = document.createElement('a');
      a.href = imgSrc;
      a.download = `${index}.jpg`;
      a.style.display = 'none';
      document.body.appendChild(a);
      a.click();
      a.remove();
    }
  };
  console.log('echartsRefs', echartsRefs);
  return (
    <BreadcrumbWrapper>
      <Card>
        <Button onClick={onDownLoad}>下载</Button>
        <ReactEcharts
          option={getOption()}
          style={{ width: '100%', height: 280 }}
          theme="my_theme "
          ref={el => {
            echartsRefs.current[0] = el;
          }}
        />
        <ReactEcharts
          option={{
            color: ['#5470c6'],
            tooltip: {
              trigger: 'axis',
            },
            xAxis: {
              type: 'category',
              splitLine: {
                show: true,
              },
              data: [
                '2023-03-21 00:00:00',
                '2023-03-21 01:00:00',
                '2023-03-21 02:00:00',
                '2023-03-21 03:00:00',
                '2023-03-21 04:00:00',
                '2023-03-21 05:00:00',
                '2023-03-21 06:00:00',
                '2023-03-21 07:00:00',
                '2023-03-21 08:00:00',
                '2023-03-21 09:00:00',
                '2023-03-21 10:00:00',
                '2023-03-21 11:00:00',
                '2023-03-21 12:00:00',
                '2023-03-21 13:00:00',
                '2023-03-21 14:00:00',
                '2023-03-21 15:00:00',
                '2023-03-21 16:00:00',
                '2023-03-21 17:00:00',
                '2023-03-21 18:00:00',
                '2023-03-21 19:00:00',
                '2023-03-21 20:00:00',
                '2023-03-21 21:00:00',
                '2023-03-21 22:00:00',
                '2023-03-21 23:00:00',
                '2023-03-22 00:00:00',
                '2023-03-22 01:00:00',
                '2023-03-22 02:00:00',
                '2023-03-22 03:00:00',
                '2023-03-22 04:00:00',
                '2023-03-22 05:00:00',
                '2023-03-22 06:00:00',
                '2023-03-22 07:00:00',
                '2023-03-22 08:00:00',
                '2023-03-22 09:00:00',
                '2023-03-22 10:00:00',
                '2023-03-22 11:00:00',
                '2023-03-22 12:00:00',
                '2023-03-22 13:00:00',
                '2023-03-22 14:00:00',
                '2023-03-22 15:00:00',
                '2023-03-22 16:00:00',
                '2023-03-22 17:00:00',
                '2023-03-22 18:00:00',
                '2023-03-22 19:00:00',
                '2023-03-22 20:00:00',
                '2023-03-22 21:00:00',
                '2023-03-22 22:00:00',
                '2023-03-22 23:00:00',
                '2023-03-23 00:00:00',
                '2023-03-23 01:00:00',
                '2023-03-23 02:00:00',
                '2023-03-23 03:00:00',
                '2023-03-23 04:00:00',
                '2023-03-23 05:00:00',
                '2023-03-23 06:00:00',
                '2023-03-23 07:00:00',
                '2023-03-23 08:00:00',
                '2023-03-23 09:00:00',
                '2023-03-23 10:00:00',
                '2023-03-23 11:00:00',
                '2023-03-23 12:00:00',
                '2023-03-23 13:00:00',
                '2023-03-23 14:00:00',
                '2023-03-23 15:00:00',
                '2023-03-23 16:00:00',
                '2023-03-23 17:00:00',
                '2023-03-23 18:00:00',
                '2023-03-23 19:00:00',
                '2023-03-23 20:00:00',
                '2023-03-23 21:00:00',
                '2023-03-23 22:00:00',
                '2023-03-23 23:00:00',
                '2023-03-24 00:00:00',
                '2023-03-24 01:00:00',
                '2023-03-24 02:00:00',
                '2023-03-24 03:00:00',
                '2023-03-24 04:00:00',
                '2023-03-24 05:00:00',
                '2023-03-24 06:00:00',
                '2023-03-24 07:00:00',
                '2023-03-24 08:00:00',
                '2023-03-24 09:00:00',
                '2023-03-24 10:00:00',
                '2023-03-24 11:00:00',
                '2023-03-24 12:00:00',
                '2023-03-24 13:00:00',
                '2023-03-24 14:00:00',
                '2023-03-24 15:00:00',
                '2023-03-24 16:00:00',
                '2023-03-24 17:00:00',
                '2023-03-24 18:00:00',
                '2023-03-24 19:00:00',
                '2023-03-24 20:00:00',
                '2023-03-24 21:00:00',
                '2023-03-24 22:00:00',
                '2023-03-24 23:00:00',
                '2023-03-25 00:00:00',
                '2023-03-25 01:00:00',
                '2023-03-25 02:00:00',
                '2023-03-25 03:00:00',
                '2023-03-25 04:00:00',
                '2023-03-25 05:00:00',
                '2023-03-25 06:00:00',
                '2023-03-25 07:00:00',
                '2023-03-25 08:00:00',
                '2023-03-25 09:00:00',
                '2023-03-25 10:00:00',
                '2023-03-25 11:00:00',
                '2023-03-25 12:00:00',
                '2023-03-25 13:00:00',
                '2023-03-25 14:00:00',
                '2023-03-25 15:00:00',
                '2023-03-25 16:00:00',
                '2023-03-25 17:00:00',
                '2023-03-25 18:00:00',
                '2023-03-25 19:00:00',
                '2023-03-25 20:00:00',
                '2023-03-25 21:00:00',
                '2023-03-25 22:00:00',
                '2023-03-25 23:00:00',
                '2023-03-26 00:00:00',
                '2023-03-26 01:00:00',
                '2023-03-26 02:00:00',
                '2023-03-26 03:00:00',
                '2023-03-26 04:00:00',
                '2023-03-26 05:00:00',
                '2023-03-26 06:00:00',
                '2023-03-26 07:00:00',
                '2023-03-26 08:00:00',
                '2023-03-26 09:00:00',
                '2023-03-26 10:00:00',
                '2023-03-26 11:00:00',
                '2023-03-26 12:00:00',
                '2023-03-26 13:00:00',
                '2023-03-26 14:00:00',
                '2023-03-26 15:00:00',
                '2023-03-26 16:00:00',
                '2023-03-26 17:00:00',
                '2023-03-26 18:00:00',
                '2023-03-26 19:00:00',
                '2023-03-26 20:00:00',
                '2023-03-26 21:00:00',
                '2023-03-26 22:00:00',
                '2023-03-26 23:00:00',
                '2023-03-27 00:00:00',
                '2023-03-27 01:00:00',
                '2023-03-27 02:00:00',
                '2023-03-27 03:00:00',
                '2023-03-27 04:00:00',
                '2023-03-27 05:00:00',
                '2023-03-27 06:00:00',
                '2023-03-27 07:00:00',
                '2023-03-27 08:00:00',
                '2023-03-27 09:00:00',
                '2023-03-27 10:00:00',
                '2023-03-27 11:00:00',
                '2023-03-27 12:00:00',
                '2023-03-27 13:00:00',
                '2023-03-27 14:00:00',
                '2023-03-27 15:00:00',
                '2023-03-27 16:00:00',
                '2023-03-27 17:00:00',
                '2023-03-27 18:00:00',
                '2023-03-27 19:00:00',
                '2023-03-27 20:00:00',
                '2023-03-27 21:00:00',
                '2023-03-27 22:00:00',
                '2023-03-27 23:00:00',
              ],
            },
            yAxis: {
              type: 'value',
              splitLine: {
                show: true,
              },
            },
            title: [
              {
                left: 'center',
                text: '氧含量',
              },
            ],
            series: [
              {
                name: 'O2',
                data: [
                  11.83,
                  15.919,
                  16.258,
                  14.408,
                  15.665,
                  15.225,
                  16.583,
                  15.797,
                  20.933,
                  41.434,
                  21.026,
                  21.744,
                  19.184,
                  21.743,
                  11.146,
                  19.224,
                  4.97,
                  22.081,
                  21.949,
                  20.337,
                  23.931,
                  23.649,
                  21.833,
                  15.539,
                  24.206,
                  18.092,
                  22.574,
                  20.816,
                  19.864,
                  17.744,
                  19.516,
                  19.435,
                  20.949,
                  16.801,
                  20.388,
                  23.988,
                  {
                    value: 28.875,
                    itemStyle: {
                      color: '#FF0000',
                    },
                  },
                  21.654,
                  20.583,
                  19.38,
                  20.628,
                  24.046,
                  25.285,
                  16.816,
                  17.171,
                  21.405,
                  22.541,
                  20.479,
                  17.301,
                  12.776,
                  21.873,
                  19.897,
                  19.89,
                  22.507,
                  18.217,
                  16.21,
                  18.046,
                  24.771,
                  19.845,
                  19.244,
                  22.299,
                  23.042,
                  22.256,
                  18.945,
                  20.913,
                  20.695,
                  23.211,
                  21.506,
                  20.721,
                  18.297,
                  17.786,
                  11.453,
                  14.953,
                  10.565,
                  9.488,
                  15.672,
                  16.477,
                  19.432,
                  17.724,
                  13.469,
                  21.12,
                  23.123,
                  21.266,
                  18.901,
                  17.538,
                  23.829,
                  16.031,
                  18.995,
                  21.902,
                  11.461,
                  20.29,
                  3.673,
                  16.827,
                  16.221,
                  17.002,
                  14.123,
                  11.251,
                  21.832,
                  21.777,
                  18.901,
                  14.501,
                  12.688,
                  20.158,
                  8.422,
                  15.659,
                  22.252,
                  20.7,
                  20.872,
                  23.539,
                  26.994,
                  23.449,
                  20.68,
                  15.528,
                  16.045,
                  21.943,
                  20.433,
                  21.271,
                  14.852,
                  28.655,
                  21.368,
                  22.276,
                  17.223,
                  16.119,
                  18.909,
                  18.363,
                  19.79,
                  17.282,
                  13.698,
                  18.168,
                  17.993,
                  17.377,
                  10.56,
                  19.388,
                  16.984,
                  22.649,
                  20.398,
                  19.258,
                  15.691,
                  12.78,
                  22.376,
                  19.149,
                  20.024,
                  22.709,
                  22.159,
                  14.587,
                  15.365,
                  13.61,
                  14.546,
                  28.331,
                  16.114,
                  20.128,
                  13.281,
                  28.586,
                  28.535,
                  19.789,
                  19.138,
                  28.731,
                  20.218,
                  18.966,
                  18.884,
                  18.408,
                  18.884,
                  18.926,
                  18.29,
                  17.833,
                  14.798,
                  17.289,
                  24.627,
                ],
                type: 'line',
                symbol: (value, params) => {
                  if (params.name == '2023-03-21 10:00:00' || params.name == '2023-03-21 09:00:00')
                    return 'triangle';
                },
                symbolSize: (value, params) => {
                  if (params.name == '2023-03-21 10:00:00' || params.name == '2023-03-21 09:00:00')
                    return 14;
                },
                markLine: {
                  data: [
                    {
                      name: '上限',
                      yAxis: 35,
                      label: {
                        formatter: '标准值 35',
                      },
                    },
                    {
                      name: '下限',
                      yAxis: 28.528,
                      label: {
                        formatter: '预设上限 28.528',
                      },
                    },
                  ],
                },
              },
            ],
          }}
          style={{ width: '100%', height: 280 }}
          theme="my_theme "
          ref={el => {
            echartsRefs.current[1] = el;
          }}
        />
      </Card>
    </BreadcrumbWrapper>
  );
};

export default connect(dvaPropsData)(Index);
